
/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/*****                                                  *****/
/*****                                                  *****/
/************************************************************/

-------------------------------------------------------------------------------
--------------                       TABLES                        ------------
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
--------------                       FUNCTIONS                     ------------
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
--------------                       SPROCS                        ------------
-------------------------------------------------------------------------------

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}NBrightBuy_MoveProductinCateogry]    Script Date: 27/03/2015 11:31:23 ******/
if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}NBrightBuy_MoveProductinCateogry]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}NBrightBuy_MoveProductinCateogry]
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}NBrightBuy_MoveProductinCateogry]    Script Date: 27/03/2015 11:31:23 ******/

CREATE PROCEDURE {databaseOwner}[{objectQualifier}NBrightBuy_MoveProductinCateogry] 
@PortalId int, 
@ModuleId int,
@ReturnLimit int = 0,
@Lang nvarchar(10) = '',
@ExtaParams nvarchar(max) = ''
AS
BEGIN


DECLARE @categoryid int
DECLARE @moveproductid int
DECLARE @movetoproductid int

SET @categoryid = convert(int,LTRIM(RTRIM(PARSENAME(replace(@ExtaParams,';','. '), 3))))
SET @moveproductid = convert(int,LTRIM(RTRIM(PARSENAME(replace(@ExtaParams,';','. '), 2))))
SET @movetoproductid = convert(int,LTRIM(RTRIM(PARSENAME(replace(@ExtaParams,';','. '), 1))))

declare @newpos decimal(10)
declare @itemid int
declare @newintpos int

DECLARE db_cursor CURSOR FOR  
select itemid,ROW_NUMBER() Over (ORDER BY [XMLdata].value('(genxml/sort)[1]','decimal(10)') ) As Rank
 from {databaseOwner}[{objectQualifier}NBrightBuy]
where XrefItemId  = @categoryid
order by [XMLdata].value('(genxml/sort)[1]','decimal(10)')

OPEN db_cursor   
FETCH NEXT FROM db_cursor INTO @itemid,@newintpos
WHILE @@FETCH_STATUS = 0   
BEGIN   
	update {databaseOwner}[{objectQualifier}NBrightBuy] set XMLData = '<genxml><sort>' + convert(nvarchar(max),@newintpos) + '</sort></genxml>' where itemid = @itemid
    FETCH NEXT FROM db_cursor INTO @itemid,@newintpos 
END   

CLOSE db_cursor   
DEALLOCATE db_cursor 

set @newpos = (select top 1 [XMLdata].value('(genxml/sort)[1]','decimal(10)')  from {databaseOwner}[{objectQualifier}NBrightBuy] where XrefItemId = @categoryid and ParentItemId = @movetoproductid)
set @newpos = @newpos - 0.1

update {databaseOwner}[{objectQualifier}NBrightBuy] set XMLData = '<genxml><sort>' + convert(nvarchar(max),@newpos) + '</sort></genxml>' where  XrefItemId = @categoryid and ParentItemId = @moveproductid

DECLARE db_cursor CURSOR FOR  
select itemid,ROW_NUMBER() Over (ORDER BY [XMLdata].value('(genxml/sort)[1]','decimal(10)') ) As Rank
 from {databaseOwner}[{objectQualifier}NBrightBuy]
where XrefItemId  = @categoryid
order by [XMLdata].value('(genxml/sort)[1]','decimal(10)')

OPEN db_cursor   
FETCH NEXT FROM db_cursor INTO @itemid,@newintpos
WHILE @@FETCH_STATUS = 0   
BEGIN   
	update {databaseOwner}[{objectQualifier}NBrightBuy] set XMLData = '<genxml><sort>' + convert(nvarchar(max),@newintpos) + '</sort></genxml>' where itemid = @itemid
    FETCH NEXT FROM db_cursor INTO @itemid,@newintpos
END   

CLOSE db_cursor   
DEALLOCATE db_cursor 



END

GO



@inherits NBrightBuy.render.NBrightBuyRazorTokens<NBrightRazor>
@using System.Linq
@using NBrightDNN
@using Nevoweb.DNN.NBrightBuy.Components;

@AddMetaData("resourcepath", "/DesktopModules/NBright/NBrightBuy/App_LocalResources/")

<!-- "pageheaderdetail.cshtml" template will be auto injected as dynamic data into page head section -->
@{
    // assign Model, so we can resolve var in VS
    var product = (ProductData) Model.List.First(); 
    var info = (NBrightInfo) product.Info;
}

<div class="categorybreadcrumbs">@CategoryBreadCrumb(true)</div>


<div class="nbs">

    <div class="productdetail" itemscope itemtype="http://schema.org/Product">

        @if (@product.Imgs.Count >= 1)
        {
            <div class="images">
                <div class="image">

                    <!-- Add to favorites buttons -->
                    @if (Model.GetSetting("enablefavorites") == "True")
                {
                        <a class="wishlistadd" listname="nbsfavorites0" itemid="@(info.ItemID)">@ResourceKey("ProductView.wishlistaddicon-lg")</a>
                        <a class="wishlistremove" listname="nbsfavorites0" itemid="@(info.ItemID)" style="display:none;">@ResourceKey("ProductView.wishlistremoveicon-lg")</a>
                    }

                    @if (product.Imgs.Count > 0)
                    {
                        <a href="@(product.Imgs.First().GetXmlProperty("genxml/hidden/imageurl"))" data-imagelightbox="nbb"><img src="@ProductImage(info, Model.GetSetting("classicimagewidth"), Model.GetSetting("classicimageheight"))" alt="@(product.Imgs.First().GetXmlProperty("genxml/textbox/txtimagedesc"))" title="@(product.Imgs.First().GetXmlProperty("genxml/textbox/txtimagedesc"))"/></a>
                    }
                    else
                    {
                        <div class="noimage" style="height: @(Model.GetSetting("classicimageheight"))">
                            @(Model.GetSettingHtmlOf("noimageicon"))NO IMAGE
                        </div>
                    }
                    @if (@product.IsOnSale)
                    {
                        <div class="onsaleflag">@ResourceKey("ProductView.onsaleflag")</div>
                    }
                    @if (!@product.IsInStock)
                    {
                        <div class="outofstockflag">@ResourceKey("ProductView.outofstockflag")</div>
                    }
                </div>

                <!-- display images -->
                <ul class="gallery">
                    @{
                        var lp = 1;
                        foreach (var img in product.Imgs)
                        {
                            if (lp > 1)
                            {
                                <li class="image@(lp.ToString())">
                                    <a href="@(img.GetXmlProperty("genxml/hidden/imageurl"))" data-imagelightbox="nbb">
                                        <img src="/DesktopModules/NBright/NBrightBuy/NBrightThumb.ashx?src=@(img.GetXmlProperty("genxml/hidden/imageurl"))&amp;w=70&amp;h=0" alt="2" title="">
                                    </a>
                                </li>
                            }
                            lp += 1;
                        }
                    }
                </ul>

            </div>
                        }

        <div class="purchasing">

            <h1 itemprop="name">@(product.ProductName)</h1>

            <div class="price">

                @if (@product.IsOnSale)
                {
                    <span>@ResourceKey("ProductView.onsale") : </span>
                    if (@product.Models.Count >= 1 && @product.Options.Count >= 1)
                    {
                        <span>@ResourceKey("ProductView.from") </span>
                    }
                    <span class="old">@(NBrightBuyUtils.FormatToStoreCurrency(product.FromPrice()))</span>
                    <span class="sale">@(NBrightBuyUtils.FormatToStoreCurrency(product.SalePrice()))</span>
                }
                else
                {
                    if (@product.Models.Count >= 1 && @product.Options.Count >= 1) // has models or options
                    {
                        <span>@ResourceKey("ProductView.from")</span>
                    }
                    <span>@(NBrightBuyUtils.FormatToStoreCurrency(product.FromPrice()))</span>
                }

            </div>

            @if (@info.GetXmlProperty("genxml/lang/genxml/textbox/txtsummary") != "")
            {
                <div itemprop="description" class="summary">@BreakOf(info, "genxml/lang/genxml/textbox/txtsummary")</div>
            }
            @if (@product.Models.Count >= 2)
            {
                <div class="models">
                    <!-- [<tag type="modelsradio" template="{name} ({bestprice})" RepeatDirection="Vertical" RepeatColumns="1" SelectedIndex="" cssclass="modelsradio" />] -->
                </div>
            }

            @if (@product.Options.Count >= 1)
            {
                <div class="options">
                    <!-- OPTION HERE -->
                </div>
            }

            @if (Model.GetSetting("cataloguemode") != "True")
            {
                <div class="buy">

                    @if (@product.IsInStock)
                    {
                        <div class="quantityoptions">
                            <a class="qtyminus" href="javascript:void(0)">-</a>
                            [<tag type="addqty" text="1" width="21" cssclass="quantity" />]
                            <a class="qtyplus" href="javascript:void(0)">+</a>
                        </div>
              <!-- Buy button HERE -->  }
                    else
                    {
                        <span class="outofstock">@ResourceKey("ProductView.outofstock")</span>}

                    <span class="return"><a href="@EntryReturnUrl(Model)">@ResourceKey("ProductView.return")</a></span>

                </div>
            }

        </div>

        <!-- Details -->
        <div class="details">

            <ul class="nav-tabs">
                @if (@info.GetXmlProperty("genxml/lang/genxml/edt/description") != "")
                {
                    <li class="tab-active"><a href="#tab-1">@ResourceKey("ProductView.description")</a></li><!-- Product description -->
                }
                @if (@product.Models.Count >= 1 && @product.Options.Count >= 1) // has models or options
                {
                    <li><a href="#tab-2">@ResourceKey("ProductView.models")</a></li><!-- Show Options table -->
                }
                @if (@product.Docs.Count >= 1)
                {
                    <li><a href="#tab-3">@ResourceKey("ProductView.documentation")</a></li><!-- Document downloads -->
                }
            </ul>
            <!--<div class="sharingwidget"><div class="share">@ResourceKey("ProductView.share") :</div><div class="addthis_sharing_toolbox"></div></div> Sharing widget -->
            <div class="sharingwidget"><div class="share">@ResourceKey("ProductView.share") :</div><div class="addthis_fake"><img src="/DesktopModules/NBright/NBrightBuy/Themes/Classic/img/addthis.png" /></div></div>

            @if (@info.GetXmlProperty("genxml/lang/genxml/edt/description") != "")
            {
                <div id="tab-1" class="tab-content tab-active">
                    <h3>@ResourceKey("ProductView.description")</h3>
                    @HtmlOf(info, "genxml/lang/genxml/edt/description")
                </div>
            }
            @if (@product.Models.Count >= 1 && @product.Options.Count >= 1) // has models or options
            {
                <div id="tab-2" class="tab-content tab-hide">
                    <h3>@ResourceKey("ProductView.models")</h3>
                    <div class="models">
                        <table>
                            <tbody>
                                <!-- Model list -->
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (@product.Docs.Count >= 1)
            {
                <div id="tab-3" class="tab-content tab-hide">
                    <h3>@ResourceKey("ProductView.documentation")</h3>
                    <ul class="documents">
                        <!-- documents HERE -->
                    </ul>
                </div>
            }

        </div>
        <!-- End Details -->
        <!-- Related Items -->
        @if (@product.GetRelatedProducts().Count >= 1)
        {
            <h3>@ResourceKey("ProductView.related")</h3>
            <div id="relatedwrapper" class="productlist">
                <!-- Related products -->
            </div>
        }

    </div>

</div>

